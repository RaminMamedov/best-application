{"version":3,"file":"static/js/523.3088ae8d.chunk.js","mappings":"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","sources":["../node_modules/clsx/dist/clsx.mjs","webpack://best-application/./src/features/Auth/Auth.module.css?4a95","features/Auth/Auth.tsx"],"sourcesContent":["function r(e){var t,f,n=\"\";if(\"string\"==typeof e||\"number\"==typeof e)n+=e;else if(\"object\"==typeof e)if(Array.isArray(e)){var o=e.length;for(t=0;t<o;t++)e[t]&&(f=r(e[t]))&&(n&&(n+=\" \"),n+=f)}else for(f in e)e[f]&&(n&&(n+=\" \"),n+=f);return n}export function clsx(){for(var e,t,f=0,n=\"\",o=arguments.length;f<o;f++)(e=arguments[f])&&(t=r(e))&&(n&&(n+=\" \"),n+=t);return n}export default clsx;","// extracted by mini-css-extract-plugin\nexport default {\"auth\":\"Auth_auth__GmhlG\",\"authContainer\":\"Auth_authContainer__pm3-7\",\"signInButton\":\"Auth_signInButton__EYV+A\",\"authInput\":\"Auth_authInput__ha47C\",\"button\":\"Auth_button__SBIFW\",\"logoutButton\":\"Auth_logoutButton__42zZr\"};","import React, {useState, useEffect} from 'react';\r\nimport { useLazyGetUserByUsernameQuery } from '../../baseApi/api';\r\nimport { setUser, clearUser } from '../../slice/userSlice';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { toast, ToastContainer } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport s from './Auth.module.css';\r\nimport {selectIsAuthenticated} from \"../../selectors/userSelectors\";\r\nimport Loader from \"../../components/Loader/Loader\";\r\nimport ErrorMessage from \"../../components/ErrorMessage/ErrorMessage\";\r\nimport {useAppDispatch, useAppSelector} from \"../../store/hooks\";\r\n\r\nconst Auth: React.FC = () => {\r\n    const [inputUsername, setInputUsername] = useState('');\r\n    const dispatch = useAppDispatch();\r\n    const navigate = useNavigate();\r\n    const isAuthenticated = useAppSelector(selectIsAuthenticated);\r\n\r\n    const [trigger, { data: users, error, isLoading }] = useLazyGetUserByUsernameQuery();\r\n\r\n    useEffect(() => {\r\n        if (isAuthenticated) {\r\n            navigate('/');\r\n        }\r\n    }, [isAuthenticated, navigate]);\r\n\r\n// приложение никогда не сможет найти введенного пользователя, это ограничение самого API\r\n    const handleSubmit = async (event: React.FormEvent<HTMLFormElement>) => {\r\n        event.preventDefault();\r\n        if (!inputUsername) return;\r\n\r\n        try {\r\n            await trigger(inputUsername);\r\n\r\n            if (users && users.length > 0 && users[0].username) {\r\n                dispatch(setUser(users[0].username));\r\n                navigate('/');\r\n                toast.success('Login successful');\r\n            } else {\r\n                toast.error('User not found');\r\n            }\r\n        } catch (err) {\r\n            console.error('Error logging in:', err);\r\n            toast.error('An error occurred during login');\r\n        }\r\n    };\r\n\r\n// тестовый сценарий для успешного входа. Выше приведена корректная реализация\r\n//     const handleSubmit = async (event: React.FormEvent<HTMLFormElement>) => {\r\n//         event.preventDefault();\r\n//         if (!inputUsername) return;\r\n//\r\n//         if (inputUsername === 'Ramin') {\r\n//             dispatch(setUser(inputUsername));\r\n//             navigate('/');\r\n//             toast.success('Login successful');\r\n//         } else {\r\n//             toast.error('User not found');\r\n//         }\r\n//     };\r\n\r\n    const handleLogout = () => {\r\n        dispatch(clearUser());\r\n        navigate('/login');\r\n    };\r\n\r\n    const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n        const newValue = e.target.value;\r\n        if (newValue.length <= 20 && !newValue.includes(\" \")) {\r\n            setInputUsername(newValue);\r\n        }\r\n    };\r\n\r\n    if (isLoading) return <Loader />;\r\n    if (error) return <ErrorMessage error={error} context={'User'}/>;\r\n\r\n    return (\r\n        <>\r\n            <ToastContainer />\r\n            <div className={s.auth}>\r\n                <div className={s.authContainer}>\r\n                    {isAuthenticated ? (\r\n                        <>\r\n                            <button className={`${s.button} ${s.logoutButton}`} onClick={handleLogout}>\r\n                                Logout\r\n                            </button>\r\n                        </>\r\n                    ) : (\r\n                        <>\r\n                            <h2 className={s.signInButton}>Sign In</h2>\r\n                            <form className={s.authForm} onSubmit={handleSubmit}>\r\n                                <input\r\n                                    className={s.authInput}\r\n                                    type=\"text\"\r\n                                    value={inputUsername}\r\n                                    onChange={handleChange}\r\n                                    placeholder=\"Type the username 'Ramin'\"\r\n                                    disabled={isLoading}\r\n                                />\r\n                                <button type={'submit'} className={s.button} disabled={isLoading}>\r\n                                    {isLoading ? 'Loading...' : 'Submit'}\r\n                                </button>\r\n                            </form>\r\n                        </>\r\n                    )}\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Auth;\r\n"],"names":["r","e","t","f","n","Array","isArray","o","length","arguments","Auth","inputUsername","setInputUsername","useState","dispatch","useAppDispatch","navigate","useNavigate","isAuthenticated","useAppSelector","selectIsAuthenticated","trigger","data","users","error","isLoading","useLazyGetUserByUsernameQuery","useEffect","_jsx","Loader","ErrorMessage","context","_jsxs","_Fragment","children","ToastContainer","className","s","auth","authContainer","button","logoutButton","onClick","handleLogout","clearUser","signInButton","authForm","onSubmit","async","event","preventDefault","username","setUser","toast","success","err","console","authInput","type","value","onChange","newValue","target","includes","placeholder","disabled"],"sourceRoot":""}